#ifndef CLOCK_SCREEN_H
#define CLOCK_SCREEN_H

#include <Adafruit_GFX.h>
#include <Adafruit_ST7789.h>
#include <time.h>
#include <WiFi.h>
#include "my_image.h"

// –î–µ—Ñ–∏–Ω–∏—Ü–∏—è –Ω–∞ –Ω–æ–≤ —Ü–≤—è—Ç - —Å—Ä–µ–±—Ä–∏—Å—Ç
#define ST77XX_SILVER 0xC618 

// –î–µ–∫–ª–∞—Ä–∞—Ü–∏—è, —Ç—ä–π –∫–∞—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –µ –≤ main.cpp
void drawBackground(Adafruit_ST7789& tft);

#define DOOM_ORANGE 0xFD20 // –ü–æ-—Ç—ä–º–µ–Ω –æ—Ä–∞–Ω–∂–µ–≤ –∑–∞ –ø–æ-–¥–æ–±—Ä–∞ —á–µ—Ç–∏–º–æ—Å—Ç

void drawDoomFrame(Adafruit_ST7789& tft) {
    // –°–∞–º–æ –±–µ–ª–∏ —ä–≥–ª–∏ –≤–º–µ—Å—Ç–æ –ø—ä–ª–Ω–∞ —Ä–∞–º–∫–∞
    tft.fillRect(10, 10, 20, 3, ST77XX_WHITE);
    tft.fillRect(290, 10, 20, 3, ST77XX_WHITE);
    tft.fillRect(10, 157, 20, 3, ST77XX_WHITE);
    tft.fillRect(290, 157, 20, 3, ST77XX_WHITE);
    
    tft.fillRect(10, 10, 3, 20, ST77XX_WHITE);
    tft.fillRect(307, 10, 3, 20, ST77XX_WHITE);
    tft.fillRect(10, 140, 3, 20, ST77XX_WHITE);
    tft.fillRect(307, 140, 3, 20, ST77XX_WHITE);
}

// Helper to draw text with a background for better readability
void drawTextWithBg(Adafruit_ST7789& tft, const String& text, int16_t x, int16_t y, uint8_t size, uint16_t textColor, uint16_t bgColor) {
    int16_t x1, y1;
    uint16_t w, h;
    tft.setTextSize(size);
    tft.getTextBounds(text.c_str(), x, y, &x1, &y1, &w, &h);

    // Redraw the small part of the background image first to prevent flickering
    int16_t bg_x = x1 - 4;
    int16_t bg_y = y1 - 4;
    uint16_t bg_w = w + 8;
    uint16_t bg_h = h + 8;
    
    // Ensure we don't draw outside the screen bounds
    if (bg_x < 0) bg_x = 0;
    if (bg_y < 0) bg_y = 0;

    // This is complex, so for now let's use a solid background
    // and see if the performance is acceptable.
    tft.fillRect(bg_x, bg_y, bg_w, bg_h, bgColor);

    tft.setCursor(x, y);
    tft.setTextColor(textColor);
    tft.print(text);
}

void showClockScreen(Adafruit_ST7789& tft, bool forceRedraw = false) {
    static bool ntpInitialized = false;
    static char lastTimeStr[16] = "";
    static char lastDateStr[32] = "";
    static bool screenHasBeenDrawn = false;

    if (forceRedraw) {
        screenHasBeenDrawn = false;
    }

    if (!ntpInitialized) {
        configTime(7200, 3600, "pool.ntp.org", "time.nist.gov");
        ntpInitialized = true;
    }

    struct tm timeinfo;
    if (!getLocalTime(&timeinfo)) {
        Serial.println("Failed to get time");
        return;
    }

    char timeStr[16];
    char dateStr[32];

    strftime(timeStr, sizeof(timeStr), "%H:%M:%S", &timeinfo);
    strftime(dateStr, sizeof(dateStr), "%Y-%m-%d", &timeinfo);

    bool timeChanged = (strcmp(timeStr, lastTimeStr) != 0);
    bool dateChanged = (strcmp(dateStr, lastDateStr) != 0);

    // –∞–∫–æ –Ω–∏—â–æ –Ω–µ —Å–µ –µ –ø—Ä–æ–º–µ–Ω–∏–ª–æ ‚Äì –∏–∑—Ö–æ–¥
    if (!timeChanged && !dateChanged && screenHasBeenDrawn) {
        return;
    }
    
    // –ü—ä–ª–Ω–æ –ø—Ä–µ—Ä–∏—Å—É–≤–∞–Ω–µ, –∞–∫–æ –µ–∫—Ä–∞–Ω—ä—Ç –Ω–µ –µ —á–µ—Ä—Ç–∞–Ω –∏–ª–∏ –¥–∞—Ç–∞—Ç–∞ —Å–µ —Å–º–µ–Ω–∏
    if (!screenHasBeenDrawn || dateChanged || forceRedraw) {
        drawBackground(tft);
        drawDoomFrame(tft);

        // –î–∞—Ç–∞ - –ø–æ-–º–∞–ª—ä–∫ —Ä–∞–∑–º–µ—Ä, —Ü–µ–Ω—Ç—Ä–∏—Ä–∞–Ω–∞
        tft.setTextSize(2);
        tft.setTextColor(DOOM_ORANGE);
        int16_t x1_date, y1_date;
        uint16_t w_date, h_date;
        tft.getTextBounds(dateStr, 0, 0, &x1_date, &y1_date, &w_date, &h_date);
        int16_t x_date = (320 - w_date) / 2;
        int16_t y_date = 130;
        tft.setCursor(x_date, y_date);
        tft.print(dateStr);
    }

    // –ò–∑—Ç—Ä–∏–≤–∞–º–µ –æ–±–ª–∞—Å—Ç—Ç–∞ –Ω–∞ —á–∞—Å–∞ –ø—Ä–µ–¥–∏ –¥–∞ –Ω–∞—Ä–∏—Å—É–≤–∞–º–µ –Ω–æ–≤–∏—è
    if (timeChanged) {
        tft.setTextSize(4);
        int16_t x1, y1;
        uint16_t w, h;
        tft.getTextBounds("00:00:00", 0, 0, &x1, &y1, &w, &h); // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —à–∏—Ä–∏–Ω–∞
        int16_t x = (320 - w) / 2;
        int16_t y = 80;
        
        // –ò–∑—Ç—Ä–∏–≤–∞–º–µ —Ü—è–ª–∞—Ç–∞ –æ–±–ª–∞—Å—Ç –Ω–∞ —á–∞—Å–∞
        tft.fillRect(x - 5, y - 5, w + 10, h + 10, ST77XX_BLACK);
    }

    // –ß–∞—Å ‚ÄìÊúâÂæàÂ§ßÂíå‰∏≠ÂøÉ
    tft.setTextSize(4);
    tft.setTextColor(DOOM_ORANGE);
    int16_t x1, y1;
    uint16_t w, h;
    tft.getTextBounds(timeStr, 0, 0, &x1, &y1, &w, &h);
    int16_t x = (320 - w) / 2;
    int16_t y = 80;
    tft.setCursor(x, y);
    tft.print(timeStr);
    
    // –ó–∞–ø–∞–º–µ—Ç—è–≤–∞–º–µ –Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    strcpy(lastTimeStr, timeStr);
    strcpy(lastDateStr, dateStr);
    screenHasBeenDrawn = true;

    Serial.print("üïí ");
    Serial.println(timeStr);
}

#endif
